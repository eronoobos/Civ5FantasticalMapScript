don't know how to implement:
- for centauri maps, change wonder conditions for: uranium flats (?), monsoon jungle (fountain of youth), sunny mesa (sri pada), geothermal shallows (old faithful)

low priority:
- better finding of connections from lake to lake? (pathfinding)
- make coastal ice not interfere with navigation?
- make wonder placement fix work?

Done (v10)
- make numbers of lakes more consistent by only using a minimum lake subpolygon count (scaled to number of filled hexes)
- adjust region temperature rainfall deviations
- make marshyness a region attribute, not a blanket chance across all grassland

Done (v9)
- new climate system
- option for no sea on the map at all (whole-world continent)
- lake generation based on global rainfall, like river generation
- option for no land at poles
- fix roads

Done (v8)
- instead of a maximum deviation determining region's min and max temperature, use min and max subpolygon latitude (even nonrealistic maps have subpolygon "latitudes")
- fix filling polar subpolygons with wasteland on climate realism maps
- add zero ocean option
- gut useless coastal expansion stuff
- fix mountain range picking getting truncated ranges
- gut edge assembly and high and low connection deciphering
- river diversions (forks that flow away from and back into the river) (but this has yet to actually be drawn)
- mountain range drawn along random subpolygons of each subedge. smaller amount of range hexes, which results in more defined ranges without looking too linear
- add tributaries to river length for labelling priority
- reduce lakeyness slightly
- fill in excess inland seas

Done (v7)
- floodfill oceans to find inland seas (don't put capes, bays, or straights in inland seas)
- slightly increase intraregion temp and rain deviation
- hand out fake sublatitudes based on the maximum dimension of their superpolygon along a random axis, multiplied by a conversion (this creates the minimum and maximum latitude within that polygon)
- include bays and straights in noncentauri labelling
- split map labels into a different mod
- save and load map labels (see MOP_Main.lua)
- pass map labels to Fantastical_Main.lua as sets of hexes, so that the labels only show once all hexes are revealed

Done (v6)
- implement map icon
- create map icon
- make new map of planet:
	- modify label dictionaries
	- remove non-centauri wonders from map: lake victoria, king solomon's mines, mt kilamanjaro, mt fuji
	- modify continent determination to only give out africa and asia (map of planet uses these togeher on the same continent)
	- modify dictionaries to only have grassland, plains, desert, and the only features are jungle and marsh. marsh can occur on a hill, jungle and marsh only occurs in grassland
	- place silver (minerals) and spices (kelp) in the ocean

Done (v5)
- fix road drawing algo not finding destination
- fix buggy markov names
- label tiny islands
- make ocean labels big
- label major rivers (smaller text)
- label lakes (smaller text)
- fix markov hang
- add map label and road options
- generate place names using markov chains of random civ's city names
- label oceans
- label mountain ranges
- label regions
- put roads on the map with adjunct Fantastical_Main.lua

DONE (v4)
- fix ice hole fill algo
- simplify ocean temp dynamics

DONE (v3)
- fill in holes in ice
- adjust ocean ice algo
- on realistic globe maps, force polar regions to have polar latitudes
- fix ocean ice showing up at the jungle latitude of a realistic realm
- fix fatal error on realisic realm maps

DONE (v2)
- adjust latitude to fix north-south ice imbalance
- fix excessive ice when climate realism on
- add fallout options: a bit, contaminated soil, contaminated water
- minimum amount of river area changes with amount of global rainfall
- fix occasional errors in floodplains placement

DONE (v1)
- add random options to temperature, rainfall, world age, oceans, continents/ocean, and islands
	- add keyrandom and valuerandom possibilites for optiondictionary
- clean up: don't want minkowski distance
- control amount of polar continent landmass
- control over amount of river tiles
- add minor and tiny river seeds (nonforks) starting from hills/mountains or heavy rainfall and end in water, like major rivers
- make sure river flow directions are working
- make mountain ranges more clumpy again by taking away the hexes along the edge last
- fix major rivers flowing past lakes
- fix duplicate region polygons
- river chance based on rainfall
- fix desert flood plain addition
- do lake rivers first, attempting to find a lake connection for each
- draw optional 'ancient roads' (can't set routetype yet though)
- add flood plains to deserts
- draw tiny rivers last, without any regard for polygon or subpolygon borders
- prevent "lakes" from forming adjacent to ocean
- allow lakes to flow into other lakes (store flow topologies to prevent both flowing into each other)
- add river chance (chance of a river seed being grown)
- draw some minor (subpolygon border) rivers directly from the coast, after major rivers
- draw major rivers from mountains (store the whole river, so that if it never connects to the coast, erase it)
- re-add subpolygon minor rivers, including flowing out of smal llakes
- fix major river drawing
- build subpolygons first (slowwww), and polygons built of closest subpolygons
- mountain ranges based on subpolygons along the edge, so that they scale better
- give rivers flow directions
- actual edge connections
- make edge path-following split paths, because currently paths can have gaps (same polygons touching, with a polygon in between it), because deviating from voronoi (which can never have disconnections along an edge of two polygons) screwed things up
- turn edges into a class
- short rivers along subpolygon edges and avoid lakes
- rivers along region edges
- fix gaps being caused by subdivision jumping
- remove tiny islands from realm maps edges
- give realm maps only one section of the real latitudes
- ocean trench tiny islands
- add squareish map sizes
- add donut ocean algorithm
	- one ocean just picks a map side and draws along it
	- two oceans is an X
	- three oceans is just like cylinder three oceans, but three horizontal or vertical lines
	- four oceans is cross plus both sides
- new rectangle ocean algo just picks sides of the map
- add map options
- adjust terrain and feature dictionaries
- seperate continental and noncontinental fake latitude tables for more consistent distribution of land types
- don't allow contiguous mountain ranges to self-intersect
- instead of expanding coasts, just make  every subpolygon with continental neighbors coast
- use subdivisions for ice
- use subdivisions for tiny islands
- use subpolygons to fill regions
- subdivide all polygons from the beginning, and give each large polygon a "pseudopolygon" made up of all its subpolygons plus and minus some randomly from its edges, to reduce obvious straight-sided shapes on large maps
- base water polygon temperature on neighboring continent polygon
- allow control over coastal vs interior mountain range ratios
- sine-based rainfall
- alot distribution of region temperature/rainfall/hillyness instead of completely random
- add latitude
- add tiny lakes as a possible region collection element
- put atolls in coastal polygons and hexes whose neighbors are a warm terrain region, and ice near cool
- give each tiny island polygon a region
- reorganize Calculate/Set/Fill procedures (too confusing right now)
- new region terrain algo, based on each region having temperature, rainfall, temperature deviation, rainfall deviation, hilliness, and dictionary size (this avoids having to include lengthy tile dictionaries)
- mountain ranges by edge
- improve control over continent size by keeping a backlog of polygon candidates to pick form when no neighbors available
- fix neighbor issues by culling polygons with zero hexes
- fix astronomy basin fill
- constrain coasts to astronomy barriers (coasts can expand into oceans but not across oceans)
- found edges between polygons better
- voronoi-based coastal generation
- polygons whose neighbors are not touching ocean trench polygons may become coastal
- adjust mountains before placing (if there are too many liminal tiles), and after placing (if there are too few mountains)